#!/usr/bin/env bash

set -e

CONFIG="install.conf.yaml"

DOTBOT_BIN="bin/dotbot"
BASEDIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

cd "${BASEDIR}"
DOTBOT_DIR="$(git config --file=.gitmodules --get submodule.dotbot.path)"

# Don't update a specific submodule, update those that are active=true or
# submodule.$name.update != none. I don't know what method i'm going to use
# yet. In the future, other submodules will be present and will have to make
# them active/inactive based on what machine we're running on. If submodule
# sync is required, the "pre-install" script should do that.
git submodule update --init --recursive --remote

"${BASEDIR}/${DOTBOT_DIR}/${DOTBOT_BIN}" -d "${BASEDIR}" -c "${CONFIG}" "${@}"
